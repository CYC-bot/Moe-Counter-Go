name: Build and Release Linux

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - {arch: amd64, suffix: amd64}
          - {arch: arm64, suffix: arm64}
          - {arch: ppc64le, suffix: ppc64le}
          - {arch: s390x, suffix: s390x}
          - {arch: 386, suffix: 386}
          - {arch: arm, suffix: armv6, goarm: 6}
          - {arch: arm, suffix: armv7, goarm: 7}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Build
      run: |
        OUTPUT="moeCounter-linux-${{ matrix.suffix }}"
        if [ -n "${{ matrix.goarm }}" ]; then
          export GOARM=${{ matrix.goarm }}
        fi
        GOOS=linux GOARCH=${{ matrix.arch }} go build -o $OUTPUT ./main.go
        mv $OUTPUT linux-${{ matrix.suffix }}
      continue-on-error: true

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-${{ matrix.suffix }}
        path: linux-${{ matrix.suffix }}
        if-no-files-found: warn

  release:
    runs-on: ubuntu-latest
    needs: [build_linux]
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: 'linux-*'

    - name: Compress binaries
      run: |
        cd artifacts
        for file in *; do
          if [ -f "$file" ]; then
            arch_name="${file#linux-}"
            zip -j "moeCounter-linux-${arch_name}.zip" "$file"
          fi
        done
        rm -rf *
        cd ..
      shell: bash

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        files: artifacts/moeCounter-linux-*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
